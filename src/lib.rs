use phf::phf_map;
use regex::Regex;
use lazy_static::lazy_static;

#[cfg(test)]
#[test]
fn it_works() {
    let tests = vec![
        (
            "1005 Gravenstein Hwy 95472".to_string(),
            ParsedAddress {
                number: Some(1005),
                street: Some("Gravenstein".to_string()),
                zip: Some("95472".to_string()),
                street_type: Some("Hwy".to_string()),
                ..Default::default()
            }
        ),
        (
            "1005 Gravenstein Hwy, 95472".to_string(),
            ParsedAddress {
                number: Some(1005),
                street: Some("Gravenstein".to_string()),
                zip: Some("95472".to_string()),
                street_type: Some("Hwy".to_string()),
                ..Default::default()
            }
      ),
      (
            "1005 Gravenstein Hwy N, 95472".to_string(),
            ParsedAddress {
                number: Some(1005),
                street: Some("Gravenstein".to_string()),
                zip: Some("95472".to_string()),
                street_type: Some("Hwy".to_string()),
                ..Default::default()
            }
      ),
      (
            "1005 Gravenstein Highway North, 95472".to_string(),
            ParsedAddress {
                number: Some(1005),
                street: Some("Gravenstein".to_string()),
                zip: Some("95472".to_string()),
                street_type: Some("hwy".to_string()),
                ..Default::default()
            }
      ),
      (
            "1005 N Gravenstein Highway, Sebastopol, CA".to_string(),
            ParsedAddress {
                number: Some(1005),
                street: Some("Gravenstein".to_string()),
                state: Some("CA".to_string()),
                city: Some("Sebastopol".to_string()),
                street_type: Some("hwy".to_string()),
                prefix: Some("N".to_string()),
                ..Default::default()
            }
      ),
      (
            "1005 N Gravenstein Highway, Sebastopol, CA, 95472".to_string(),
            ParsedAddress {
                number: Some(1005),
                street: Some("Gravenstein".to_string()),
                state: Some("CA".to_string()),
                zip: Some("95472".to_string()),
                city: Some("Sebastopol".to_string()),
                street_type: Some("hwy".to_string()),
                prefix: Some("N".to_string()),
                ..Default::default()
            }
      ),
      (
            "1005 N Gravenstein Highway Sebastopol CA 95472".to_string(),
            ParsedAddress {
                number: Some(1005),
                street: Some("Gravenstein".to_string()),
                state: Some("CA".to_string()),
                zip: Some("95472".to_string()),
                city: Some("Sebastopol".to_string()),
                street_type: Some("hwy".to_string()),
                prefix: Some("N".to_string()),
                ..Default::default()
            }
      ),
    ];

    for (address,expected) in tests.iter() {
        assert_eq!(expected, &ParsedAddress::new(&address));
    }
}

#[derive(Default, Debug, PartialEq)]
pub struct ParsedAddress {
    pub number: Option<i32>,
    pub prefix: Option<String>,
    pub street: Option<String>,
    pub street_type: Option<String>,
    pub suffix: Option<String>,
    pub city: Option<String>,
    pub state: Option<String>,
    pub zip: Option<String>,
}

impl ParsedAddress {
    pub fn new(address: &String) -> ParsedAddress {
        let mut parsed_address = ParsedAddress { ..Default::default() };

        match REGEX.captures(&address) {
            Some(matches) => {
                parsed_address.number = matches.get(1).map_or(None, |m| Self::parse_number_or_none(m.as_str()));
                parsed_address.prefix = matches.get(4).map_or(None, |m| Some(m.as_str().to_string()));
                parsed_address.street = matches.get(5).map_or(None, |m| Some(m.as_str().to_string()));
                parsed_address.street_type = Self::normalize_street_type(matches.get(6).map_or(None, |m| Some(m.as_str().to_string())));
                parsed_address.suffix = matches.get(12).map_or(None, |m| Some(m.as_str().to_string()));
                parsed_address.city = matches.get(13).map_or(None, |m| Some(m.as_str().to_string()));
                parsed_address.state = matches.get(14).map_or(None, |m| Some(m.as_str().to_string()));
                parsed_address.zip = matches.get(15).map_or(None, |m| Some(m.as_str().to_string()));
            },
            None => return parsed_address
        }

        parsed_address
    }

    fn normalize_street_type(street_type: Option<String>) -> Option<String> {
        if street_type == None { return None };
        let street_type = street_type.unwrap();
        match STREETS.get(&street_type.to_lowercase()) {
            Some(street_type) => Some(street_type.to_string()),
            None => Some(street_type)
        }

    }

    fn parse_number_or_none(number: &str) -> Option<i32> {
        match number.to_string().parse::<i32>() {
            Ok(number) => Some(number),
            _ => None
        }
    }
}

static STREETS: phf::Map<&'static str, &'static str> = phf_map! {
    "allee" => "aly",
    "alley" => "aly",
    "ally" => "aly",
    "anex" => "anx",
    "annex" => "anx",
    "annx" => "anx",
    "arcade" => "arc",
    "av" => "ave",
    "aven" => "ave",
    "avenu" => "ave",
    "avenue" => "ave",
    "avn" => "ave",
    "avnue" => "ave",
    "bayoo" => "byu",
    "bayou" => "byu",
    "beach" => "bch",
    "bend" => "bnd",
    "bluf" => "blf",
    "bluff" => "blf",
    "bluffs" => "blfs",
    "bot" => "btm",
    "bottm" => "btm",
    "bottom" => "btm",
    "boul" => "blvd",
    "boulevard" => "blvd",
    "boulv" => "blvd",
    "branch" => "br",
    "brdge" => "brg",
    "bridge" => "brg",
    "brnch" => "br",
    "brook" => "brk",
    "brooks" => "brks",
    "burg" => "bg",
    "burgs" => "bgs",
    "bypa" => "byp",
    "bypas" => "byp",
    "bypass" => "byp",
    "byps" => "byp",
    "camp" => "cp",
    "canyn" => "cyn",
    "canyon" => "cyn",
    "cape" => "cpe",
    "causeway" => "cswy",
    "causway" => "cswy",
    "cen" => "ctr",
    "cent" => "ctr",
    "center" => "ctr",
    "centers" => "ctrs",
    "centr" => "ctr",
    "centre" => "ctr",
    "circ" => "cir",
    "circl" => "cir",
    "circle" => "cir",
    "circles" => "cirs",
    "ck" => "crk",
    "cliff" => "clf",
    "cliffs" => "clfs",
    "club" => "clb",
    "cmp" => "cp",
    "cnter" => "ctr",
    "cntr" => "ctr",
    "cnyn" => "cyn",
    "common" => "cmn",
    "corner" => "cor",
    "corners" => "cors",
    "course" => "crse",
    "court" => "ct",
    "courts" => "cts",
    "cove" => "cv",
    "coves" => "cvs",
    "cr" => "crk",
    "crcl" => "cir",
    "crcle" => "cir",
    "crecent" => "cres",
    "creek" => "crk",
    "crescent" => "cres",
    "cresent" => "cres",
    "crest" => "crst",
    "crossing" => "xing",
    "crossroad" => "xrd",
    "crscnt" => "cres",
    "crsent" => "cres",
    "crsnt" => "cres",
    "crssing" => "xing",
    "crssng" => "xing",
    "crt" => "ct",
    "curve" => "curv",
    "dale" => "dl",
    "dam" => "dm",
    "div" => "dv",
    "divide" => "dv",
    "driv" => "dr",
    "drive" => "dr",
    "drives" => "drs",
    "drv" => "dr",
    "dvd" => "dv",
    "estate" => "est",
    "estates" => "ests",
    "exp" => "expy",
    "expr" => "expy",
    "express" => "expy",
    "expressway" => "expy",
    "expw" => "expy",
    "extension" => "ext",
    "extensions" => "exts",
    "extn" => "ext",
    "extnsn" => "ext",
    "falls" => "fls",
    "ferry" => "fry",
    "field" => "fld",
    "fields" => "flds",
    "flat" => "flt",
    "flats" => "flts",
    "ford" => "frd",
    "fords" => "frds",
    "forest" => "frst",
    "forests" => "frst",
    "forg" => "frg",
    "forge" => "frg",
    "forges" => "frgs",
    "fork" => "frk",
    "forks" => "frks",
    "fort" => "ft",
    "freeway" => "fwy",
    "freewy" => "fwy",
    "frry" => "fry",
    "frt" => "ft",
    "frway" => "fwy",
    "frwy" => "fwy",
    "garden" => "gdn",
    "gardens" => "gdns",
    "gardn" => "gdn",
    "gateway" => "gtwy",
    "gatewy" => "gtwy",
    "gatway" => "gtwy",
    "glen" => "gln",
    "glens" => "glns",
    "grden" => "gdn",
    "grdn" => "gdn",
    "grdns" => "gdns",
    "green" => "grn",
    "greens" => "grns",
    "grov" => "grv",
    "grove" => "grv",
    "groves" => "grvs",
    "gtway" => "gtwy",
    "harb" => "hbr",
    "harbor" => "hbr",
    "harbors" => "hbrs",
    "harbr" => "hbr",
    "haven" => "hvn",
    "havn" => "hvn",
    "height" => "hts",
    "heights" => "hts",
    "hgts" => "hts",
    "highway" => "hwy",
    "highwy" => "hwy",
    "hill" => "hl",
    "hills" => "hls",
    "hiway" => "hwy",
    "hiwy" => "hwy",
    "hllw" => "holw",
    "hollow" => "holw",
    "hollows" => "holw",
    "holws" => "holw",
    "hrbor" => "hbr",
    "ht" => "hts",
    "hway" => "hwy",
    "inlet" => "inlt",
    "island" => "is",
    "islands" => "iss",
    "isles" => "isle",
    "islnd" => "is",
    "islnds" => "iss",
    "jction" => "jct",
    "jctn" => "jct",
    "jctns" => "jcts",
    "junction" => "jct",
    "junctions" => "jcts",
    "junctn" => "jct",
    "juncton" => "jct",
    "key" => "ky",
    "keys" => "kys",
    "knol" => "knl",
    "knoll" => "knl",
    "knolls" => "knls",
    "la" => "ln",
    "lake" => "lk",
    "lakes" => "lks",
    "landing" => "lndg",
    "lane" => "ln",
    "lanes" => "ln",
    "ldge" => "ldg",
    "light" => "lgt",
    "lights" => "lgts",
    "lndng" => "lndg",
    "loaf" => "lf",
    "lock" => "lck",
    "locks" => "lcks",
    "lodg" => "ldg",
    "lodge" => "ldg",
    "loops" => "loop",
    "manor" => "mnr",
    "manors" => "mnrs",
    "meadow" => "mdw",
    "meadows" => "mdws",
    "medows" => "mdws",
    "mill" => "ml",
    "mills" => "mls",
    "mission" => "msn",
    "missn" => "msn",
    "mnt" => "mt",
    "mntain" => "mtn",
    "mntn" => "mtn",
    "mntns" => "mtns",
    "motorway" => "mtwy",
    "mount" => "mt",
    "mountain" => "mtn",
    "mountains" => "mtns",
    "mountin" => "mtn",
    "mssn" => "msn",
    "mtin" => "mtn",
    "neck" => "nck",
    "orchard" => "orch",
    "orchrd" => "orch",
    "overpass" => "opas",
    "ovl" => "oval",
    "parks" => "park",
    "parkway" => "pkwy",
    "parkways" => "pkwy",
    "parkwy" => "pkwy",
    "passage" => "psge",
    "paths" => "path",
    "pikes" => "pike",
    "pine" => "pne",
    "pines" => "pnes",
    "pk" => "park",
    "pkway" => "pkwy",
    "pkwys" => "pkwy",
    "pky" => "pkwy",
    "place" => "pl",
    "plain" => "pln",
    "plaines" => "plns",
    "plains" => "plns",
    "plaza" => "plz",
    "plza" => "plz",
    "point" => "pt",
    "points" => "pts",
    "port" => "prt",
    "ports" => "prts",
    "prairie" => "pr",
    "prarie" => "pr",
    "prk" => "park",
    "prr" => "pr",
    "rad" => "radl",
    "radial" => "radl",
    "radiel" => "radl",
    "ranch" => "rnch",
    "ranches" => "rnch",
    "rapid" => "rpd",
    "rapids" => "rpds",
    "rdge" => "rdg",
    "rest" => "rst",
    "ridge" => "rdg",
    "ridges" => "rdgs",
    "river" => "riv",
    "rivr" => "riv",
    "rnchs" => "rnch",
    "road" => "rd",
    "roads" => "rds",
    "route" => "rte",
    "rvr" => "riv",
    "shoal" => "shl",
    "shoals" => "shls",
    "shoar" => "shr",
    "shoars" => "shrs",
    "shore" => "shr",
    "shores" => "shrs",
    "skyway" => "skwy",
    "spng" => "spg",
    "spngs" => "spgs",
    "spring" => "spg",
    "springs" => "spgs",
    "sprng" => "spg",
    "sprngs" => "spgs",
    "spurs" => "spur",
    "sqr" => "sq",
    "sqre" => "sq",
    "sqrs" => "sqs",
    "squ" => "sq",
    "square" => "sq",
    "squares" => "sqs",
    "station" => "sta",
    "statn" => "sta",
    "stn" => "sta",
    "str" => "st",
    "strav" => "stra",
    "strave" => "stra",
    "straven" => "stra",
    "stravenue" => "stra",
    "stravn" => "stra",
    "stream" => "strm",
    "street" => "st",
    "streets" => "sts",
    "streme" => "strm",
    "strt" => "st",
    "strvn" => "stra",
    "strvnue" => "stra",
    "sumit" => "smt",
    "sumitt" => "smt",
    "summit" => "smt",
    "terr" => "ter",
    "terrace" => "ter",
    "throughway" => "trwy",
    "tpk" => "tpke",
    "tr" => "trl",
    "trace" => "trce",
    "traces" => "trce",
    "track" => "trak",
    "tracks" => "trak",
    "trafficway" => "trfy",
    "trail" => "trl",
    "trails" => "trl",
    "trk" => "trak",
    "trks" => "trak",
    "trls" => "trl",
    "trnpk" => "tpke",
    "trpk" => "tpke",
    "tunel" => "tunl",
    "tunls" => "tunl",
    "tunnel" => "tunl",
    "tunnels" => "tunl",
    "tunnl" => "tunl",
    "turnpike" => "tpke",
    "turnpk" => "tpke",
    "underpass" => "upas",
    "union" => "un",
    "unions" => "uns",
    "valley" => "vly",
    "valleys" => "vlys",
    "vally" => "vly",
    "vdct" => "via",
    "viadct" => "via",
    "viaduct" => "via",
    "view" => "vw",
    "views" => "vws",
    "vill" => "vlg",
    "villag" => "vlg",
    "village" => "vlg",
    "villages" => "vlgs",
    "ville" => "vl",
    "villg" => "vlg",
    "villiage" => "vlg",
    "vist" => "vis",
    "vista" => "vis",
    "vlly" => "vly",
    "vst" => "vis",
    "vsta" => "vis",
    "walks" => "walk",
    "well" => "wl",
    "wells" => "wls",
    "wy" => "way"
};

lazy_static! {
    static ref REGEX: Regex = Regex::new(r"(?x-mi:^\W*((?-mix:\d+-?\d*))\W*(?:(?-mix:\d+/\d+)\W*)?(?:(?:((?i-mx:north|northeast|east|southeast|south|southwest|west|northwest|N\.?|NE\.?|E\.?|SE\.?|S\.?|SW\.?|W\.?|NW))\W+ ((?i-mx:allee|aly|alley|ally|anex|anx|annex|annx|arcade|arc|av|ave|aven|avenu|avenue|avn|avnue|bayoo|byu|bayou|beach|bch|bend|bnd|bluf|blf|bluff|bluffs|blfs|bot|btm|bottm|bottom|boul|blvd|boulevard|boulv|branch|br|brdge|brg|bridge|brnch|brook|brk|brooks|brks|burg|bg|burgs|bgs|bypa|byp|bypas|bypass|byps|camp|cp|canyn|cyn|canyon|cape|cpe|causeway|cswy|causway|cen|ctr|cent|center|centers|ctrs|centr|centre|circ|cir|circl|circle|circles|cirs|ck|crk|cliff|clf|cliffs|clfs|club|clb|cmp|cnter|cntr|cnyn|common|cmn|corner|cor|corners|cors|course|crse|court|ct|courts|cts|cove|cv|coves|cvs|cr|crcl|crcle|crecent|cres|creek|crescent|cresent|crest|crst|crossing|xing|crossroad|xrd|crscnt|crsent|crsnt|crssing|crssng|crt|curve|curv|dale|dl|dam|dm|div|dv|divide|driv|dr|drive|drives|drs|drv|dvd|estate|est|estates|ests|exp|expy|expr|express|expressway|expw|extension|ext|extensions|exts|extn|extnsn|falls|fls|ferry|fry|field|fld|fields|flds|flat|flt|flats|flts|ford|frd|fords|frds|forest|frst|forests|forg|frg|forge|forges|frgs|fork|frk|forks|frks|fort|ft|freeway|fwy|freewy|frry|frt|frway|frwy|garden|gdn|gardens|gdns|gardn|gateway|gtwy|gatewy|gatway|glen|gln|glens|glns|grden|grdn|grdns|green|grn|greens|grns|grov|grv|grove|groves|grvs|gtway|harb|hbr|harbor|harbors|hbrs|harbr|haven|hvn|havn|height|hts|heights|hgts|highway|hwy|highwy|hill|hl|hills|hls|hiway|hiwy|hllw|holw|hollow|hollows|holws|hrbor|ht|hway|inlet|inlt|island|is|islands|iss|isles|isle|islnd|islnds|jction|jct|jctn|jctns|jcts|junction|junctions|junctn|juncton|key|ky|keys|kys|knol|knl|knoll|knolls|knls|la|ln|lake|lk|lakes|lks|landing|lndg|lane|lanes|ldge|ldg|light|lgt|lights|lgts|lndng|loaf|lf|lock|lck|locks|lcks|lodg|lodge|loops|loop|manor|mnr|manors|mnrs|meadow|mdw|meadows|mdws|medows|mill|ml|mills|mls|mission|msn|missn|mnt|mt|mntain|mtn|mntn|mntns|mtns|motorway|mtwy|mount|mountain|mountains|mountin|mssn|mtin|neck|nck|orchard|orch|orchrd|overpass|opas|ovl|oval|parks|park|parkway|pkwy|parkways|parkwy|passage|psge|paths|path|pikes|pike|pine|pne|pines|pnes|pk|pkway|pkwys|pky|place|pl|plain|pln|plaines|plns|plains|plaza|plz|plza|point|pt|points|pts|port|prt|ports|prts|prairie|pr|prarie|prk|prr|rad|radl|radial|radiel|ranch|rnch|ranches|rapid|rpd|rapids|rpds|rdge|rdg|rest|rst|ridge|ridges|rdgs|river|riv|rivr|rnchs|road|rd|roads|rds|route|rte|rvr|shoal|shl|shoals|shls|shoar|shr|shoars|shrs|shore|shores|skyway|skwy|spng|spg|spngs|spgs|spring|springs|sprng|sprngs|spurs|spur|sqr|sq|sqre|sqrs|sqs|squ|square|squares|station|sta|statn|stn|str|st|strav|stra|strave|straven|stravenue|stravn|stream|strm|street|streets|sts|streme|strt|strvn|strvnue|sumit|smt|sumitt|summit|terr|ter|terrace|throughway|trwy|tpk|tpke|tr|trl|trace|trce|traces|track|trak|tracks|trafficway|trfy|trail|trails|trk|trks|trls|trnpk|trpk|tunel|tunl|tunls|tunnel|tunnels|tunnl|turnpike|turnpk|underpass|upas|union|un|unions|uns|valley|vly|valleys|vlys|vally|vdct|via|viadct|viaduct|view|vw|views|vws|vill|vlg|villag|village|villages|vlgs|ville|vl|villg|villiage|vist|vis|vista|vlly|vst|vsta|walks|walk|well|wl|wells|wls|wy|way))\b )|(?:((?i-mx:north|northeast|east|southeast|south|southwest|west|northwest|N\.?|NE\.?|E\.?|SE\.?|S\.?|SW\.?|W\.?|NW))\W+ )?(?:([^,]+)(?:[^\w,]+((?i-mx:allee|aly|alley|ally|anex|anx|annex|annx|arcade|arc|av|ave|aven|avenu|avenue|avn|avnue|bayoo|byu|bayou|beach|bch|bend|bnd|bluf|blf|bluff|bluffs|blfs|bot|btm|bottm|bottom|boul|blvd|boulevard|boulv|branch|br|brdge|brg|bridge|brnch|brook|brk|brooks|brks|burg|bg|burgs|bgs|bypa|byp|bypas|bypass|byps|camp|cp|canyn|cyn|canyon|cape|cpe|causeway|cswy|causway|cen|ctr|cent|center|centers|ctrs|centr|centre|circ|cir|circl|circle|circles|cirs|ck|crk|cliff|clf|cliffs|clfs|club|clb|cmp|cnter|cntr|cnyn|common|cmn|corner|cor|corners|cors|course|crse|court|ct|courts|cts|cove|cv|coves|cvs|cr|crcl|crcle|crecent|cres|creek|crescent|cresent|crest|crst|crossing|xing|crossroad|xrd|crscnt|crsent|crsnt|crssing|crssng|crt|curve|curv|dale|dl|dam|dm|div|dv|divide|driv|dr|drive|drives|drs|drv|dvd|estate|est|estates|ests|exp|expy|expr|express|expressway|expw|extension|ext|extensions|exts|extn|extnsn|falls|fls|ferry|fry|field|fld|fields|flds|flat|flt|flats|flts|ford|frd|fords|frds|forest|frst|forests|forg|frg|forge|forges|frgs|fork|frk|forks|frks|fort|ft|freeway|fwy|freewy|frry|frt|frway|frwy|garden|gdn|gardens|gdns|gardn|gateway|gtwy|gatewy|gatway|glen|gln|glens|glns|grden|grdn|grdns|green|grn|greens|grns|grov|grv|grove|groves|grvs|gtway|harb|hbr|harbor|harbors|hbrs|harbr|haven|hvn|havn|height|hts|heights|hgts|highway|hwy|highwy|hill|hl|hills|hls|hiway|hiwy|hllw|holw|hollow|hollows|holws|hrbor|ht|hway|inlet|inlt|island|is|islands|iss|isles|isle|islnd|islnds|jction|jct|jctn|jctns|jcts|junction|junctions|junctn|juncton|key|ky|keys|kys|knol|knl|knoll|knolls|knls|la|ln|lake|lk|lakes|lks|landing|lndg|lane|lanes|ldge|ldg|light|lgt|lights|lgts|lndng|loaf|lf|lock|lck|locks|lcks|lodg|lodge|loops|loop|manor|mnr|manors|mnrs|meadow|mdw|meadows|mdws|medows|mill|ml|mills|mls|mission|msn|missn|mnt|mt|mntain|mtn|mntn|mntns|mtns|motorway|mtwy|mount|mountain|mountains|mountin|mssn|mtin|neck|nck|orchard|orch|orchrd|overpass|opas|ovl|oval|parks|park|parkway|pkwy|parkways|parkwy|passage|psge|paths|path|pikes|pike|pine|pne|pines|pnes|pk|pkway|pkwys|pky|place|pl|plain|pln|plaines|plns|plains|plaza|plz|plza|point|pt|points|pts|port|prt|ports|prts|prairie|pr|prarie|prk|prr|rad|radl|radial|radiel|ranch|rnch|ranches|rapid|rpd|rapids|rpds|rdge|rdg|rest|rst|ridge|ridges|rdgs|river|riv|rivr|rnchs|road|rd|roads|rds|route|rte|rvr|shoal|shl|shoals|shls|shoar|shr|shoars|shrs|shore|shores|skyway|skwy|spng|spg|spngs|spgs|spring|springs|sprng|sprngs|spurs|spur|sqr|sq|sqre|sqrs|sqs|squ|square|squares|station|sta|statn|stn|str|st|strav|stra|strave|straven|stravenue|stravn|stream|strm|street|streets|sts|streme|strt|strvn|strvnue|sumit|smt|sumitt|summit|terr|ter|terrace|throughway|trwy|tpk|tpke|tr|trl|trace|trce|traces|track|trak|tracks|trafficway|trfy|trail|trails|trk|trks|trls|trnpk|trpk|tunel|tunl|tunls|tunnel|tunnels|tunnl|turnpike|turnpk|underpass|upas|union|un|unions|uns|valley|vly|valleys|vlys|vally|vdct|via|viadct|viaduct|view|vw|views|vws|vill|vlg|villag|village|villages|vlgs|ville|vl|villg|villiage|vist|vis|vista|vlly|vst|vsta|walks|walk|well|wl|wells|wls|wy|way))\b )(?:[^\w,]+((?i-mx:north|northeast|east|southeast|south|southwest|west|northwest|N\.?|NE\.?|E\.?|SE\.?|S\.?|SW\.?|W\.?|NW))\b )?|([^,]*\d)((?i-mx:north|northeast|east|southeast|south|southwest|west|northwest|N\.?|NE\.?|E\.?|SE\.?|S\.?|SW\.?|W\.?|NW))\b|([^,]+?)(?:[^\w,]+((?i-mx:allee|aly|alley|ally|anex|anx|annex|annx|arcade|arc|av|ave|aven|avenu|avenue|avn|avnue|bayoo|byu|bayou|beach|bch|bend|bnd|bluf|blf|bluff|bluffs|blfs|bot|btm|bottm|bottom|boul|blvd|boulevard|boulv|branch|br|brdge|brg|bridge|brnch|brook|brk|brooks|brks|burg|bg|burgs|bgs|bypa|byp|bypas|bypass|byps|camp|cp|canyn|cyn|canyon|cape|cpe|causeway|cswy|causway|cen|ctr|cent|center|centers|ctrs|centr|centre|circ|cir|circl|circle|circles|cirs|ck|crk|cliff|clf|cliffs|clfs|club|clb|cmp|cnter|cntr|cnyn|common|cmn|corner|cor|corners|cors|course|crse|court|ct|courts|cts|cove|cv|coves|cvs|cr|crcl|crcle|crecent|cres|creek|crescent|cresent|crest|crst|crossing|xing|crossroad|xrd|crscnt|crsent|crsnt|crssing|crssng|crt|curve|curv|dale|dl|dam|dm|div|dv|divide|driv|dr|drive|drives|drs|drv|dvd|estate|est|estates|ests|exp|expy|expr|express|expressway|expw|extension|ext|extensions|exts|extn|extnsn|falls|fls|ferry|fry|field|fld|fields|flds|flat|flt|flats|flts|ford|frd|fords|frds|forest|frst|forests|forg|frg|forge|forges|frgs|fork|frk|forks|frks|fort|ft|freeway|fwy|freewy|frry|frt|frway|frwy|garden|gdn|gardens|gdns|gardn|gateway|gtwy|gatewy|gatway|glen|gln|glens|glns|grden|grdn|grdns|green|grn|greens|grns|grov|grv|grove|groves|grvs|gtway|harb|hbr|harbor|harbors|hbrs|harbr|haven|hvn|havn|height|hts|heights|hgts|highway|hwy|highwy|hill|hl|hills|hls|hiway|hiwy|hllw|holw|hollow|hollows|holws|hrbor|ht|hway|inlet|inlt|island|is|islands|iss|isles|isle|islnd|islnds|jction|jct|jctn|jctns|jcts|junction|junctions|junctn|juncton|key|ky|keys|kys|knol|knl|knoll|knolls|knls|la|ln|lake|lk|lakes|lks|landing|lndg|lane|lanes|ldge|ldg|light|lgt|lights|lgts|lndng|loaf|lf|lock|lck|locks|lcks|lodg|lodge|loops|loop|manor|mnr|manors|mnrs|meadow|mdw|meadows|mdws|medows|mill|ml|mills|mls|mission|msn|missn|mnt|mt|mntain|mtn|mntn|mntns|mtns|motorway|mtwy|mount|mountain|mountains|mountin|mssn|mtin|neck|nck|orchard|orch|orchrd|overpass|opas|ovl|oval|parks|park|parkway|pkwy|parkways|parkwy|passage|psge|paths|path|pikes|pike|pine|pne|pines|pnes|pk|pkway|pkwys|pky|place|pl|plain|pln|plaines|plns|plains|plaza|plz|plza|point|pt|points|pts|port|prt|ports|prts|prairie|pr|prarie|prk|prr|rad|radl|radial|radiel|ranch|rnch|ranches|rapid|rpd|rapids|rpds|rdge|rdg|rest|rst|ridge|ridges|rdgs|river|riv|rivr|rnchs|road|rd|roads|rds|route|rte|rvr|shoal|shl|shoals|shls|shoar|shr|shoars|shrs|shore|shores|skyway|skwy|spng|spg|spngs|spgs|spring|springs|sprng|sprngs|spurs|spur|sqr|sq|sqre|sqrs|sqs|squ|square|squares|station|sta|statn|stn|str|st|strav|stra|strave|straven|stravenue|stravn|stream|strm|street|streets|sts|streme|strt|strvn|strvnue|sumit|smt|sumitt|summit|terr|ter|terrace|throughway|trwy|tpk|tpke|tr|trl|trace|trce|traces|track|trak|tracks|trafficway|trfy|trail|trails|trk|trks|trls|trnpk|trpk|tunel|tunl|tunls|tunnel|tunnels|tunnl|turnpike|turnpk|underpass|upas|union|un|unions|uns|valley|vly|valleys|vlys|vally|vdct|via|viadct|viaduct|view|vw|views|vws|vill|vlg|villag|village|villages|vlgs|ville|vl|villg|villiage|vist|vis|vista|vlly|vst|vsta|walks|walk|well|wl|wells|wls|wy|way))\b )?(?:[^\w,]+((?i-mx:north|northeast|east|southeast|south|southwest|west|northwest|N\.?|NE\.?|E\.?|SE\.?|S\.?|SW\.?|W\.?|NW))\b )?))\W+(?:(?i-mx:(?:(?:su?i?te|p\W*[om]\W*b(?:ox)?|dept|apt|ro*m|fl|apt|unit|box)\W+|\#\W*)[\w-]+)\W+)?(?:([^\d,]+?)\W+ ((?i-mx:AL|AK|AS|AZ|AR|CA|CO|CT|DE|DC|FM|FL|GA|GU|HI|ID|IL|IN|IA|KS|KY|LA|ME|MH|MD|MA|MI|MN|MS|MO|MT|NE|NV|NH|NJ|NM|NY|NC|ND|MP|OH|OK|OR|PW|PA|PR|RI|SC|SD|TN|TX|UT|VT|VI|VA|WA|WV|WI|WY|AB|BC|NL|NS|PE|NB|QC|ON|MB|SK|NU|NT|YT|alabama|alaska|american samoa|arizona|arkansas|california|colorado|connecticut|delaware|district of columbia|federated states of micronesia|florida|georgia|guam|hawaii|idaho|illinois|indiana|iowa|kansas|kentucky|louisiana|maine|marshall islands|maryland|massachusetts|michigan|minnesota|mississippi|missouri|montana|nebraska|nevada|new hampshire|new jersey|new mexico|new york|north carolina|north dakota|northern mariana islands|ohio|oklahoma|oregon|palau|pennsylvania|puerto rico|rhode island|south carolina|south dakota|tennessee|texas|utah|vermont|virgin islands|virginia|washington|west virginia|wisconsin|wyoming|alberta|british columbia|newfoundland and labrador|nova scotia|prince edward island|new brunswick|quebec|ontario|manitoba|saskatchewan|nunavut|northwest territories|yukon territory))\W*)? (?i-mx:((?:\d{5}(?:-\d{4})?)|(?:\w\d\w\s?\d\w\d))?)\W*$)").unwrap();
}



